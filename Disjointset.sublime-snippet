<snippet>
	<content><![CDATA[
class DisjointSet{
   vector<int> rank,size,parent;
   public:
   DisjointSet(LL n){
    rank.resize(n+1,0);
    parent.resize(n+1);
    size.resize(n+1,1);
    for(LL i=0;i<=n;++i){
        parent[i]=i;
    }
   }
   LL findUpar(LL Node){
       if(Node==parent[Node]) return Node;
       return parent[Node]=findUpar(parent[Node]);
   }
   void unionbyrank(LL u,LL v){
       LL ulp=findUpar(u);
       LL vlp=findUpar(v);
       if(ulp==vlp) return;
       if(rank[ulp]<rank[vlp]){
         parent[ulp]=vlp;
       }
       else if(rank[ulp]>rank[vlp]){
         parent[vlp]=ulp;
       }
       else{
         parent[vlp]=ulp;
         rank[ulp]++;
       }
    }
    void unionbysize(LL u,LL v){
       LL ulp=findUpar(u);
       LL vlp=findUpar(v);
       if(ulp==vlp) return;
       if(size[ulp]<size[vlp]){
          parent[ulp]=vlp;
          size[vlp]+=size[ulp];
       }
       else {
         parent[vlp]=ulp;
         size[ulp]+=size[vlp];
       }
    }
    bool conn(LL u,LL v){
        return parent[u]==parent[v];
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Disj</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> 
</snippet>
